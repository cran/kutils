% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfaTable.R
\name{cfaTable}
\alias{cfaTable}
\title{Creates Confirmatory Factor Analysis Tables}
\usage{
cfaTable(object, file = NULL, params = c("loadings", "intercepts"),
  fit = c("chi-square", "cfi", "tli", "rmsea"), names_fit = fit,
  standardized = FALSE, names_upper = TRUE, single_spaced = TRUE,
  type = "latex")
}
\arguments{
\item{object}{A cfa object from lavaan}

\item{file}{Default is NULL, meaning no output file. If 
a character string is provided, it will be used as the
name of the output file. This function will add suffix ".tex"
or ".html", depending on the \code{type} argument}

\item{params}{Measurement parameters to be included. Valid values
are "loadings", "intercepts", "residuals", "latentvariances",
and "thresholds". See Details.}

\item{fit}{A vector of fit measures that to be included. Listing
"chi-square" will do special formatting to the chi-square
value in the note. Any other measures listed must correspond
to measures found in fitMeasures(object).}

\item{names_fit}{Names for the fit measures requested by the fit
parameter.  Must have same number of elements as fit.  For
example, fit = c("cfi.scaled", "tli.scaled"), names_fit =
c("CFI", "TLI").}

\item{standardized}{Should standarized results be presented along
with unstandardized?  Default is FALSE. See Details.}

\item{names_upper}{Should the names of the model fit parameters be
forced to be uppercase.  The default is TRUE.  This
will also affect whatever is specified in names_fit.}

\item{single_spaced}{Default = TRUE. If a double-spaced table is
needed, set single_spaced = FALSE.}

\item{type}{Type of output table ("latex" or "html"). Defaults to "latex".}
}
\value{
CFA table of desired type.
}
\description{
Creates LaTeX markup for confirmatory
factor analysis output tables in the style of the American
Psychological Association(APA). Input objects should
be created by the "\code{lavaan}" package.
}
\details{
The argument params determines the inclusion of estimate sections.
\itemize{
\item "loadings" are the factor loadings in the model.
\item "intercepts" are
the indicator variable intercepts.
\item "residuals" are the indicator
variable residual variances.
\item "latentvariances" are the latent
variable variances and covariances.
\item "thresholds" arise in latent
response variates (non-numeric indicator data).
}

The stantardized parameter regulates the number of columns to be
included.  standardized=FALSE implies there will be four columns:
\enumerate{
\item the estimate
\item the standard error
\item the z-value, and
\item the p-value.
}

When standardized = TRUE, the columns are:
\enumerate{
\item the parameter estimates,
\item the standard errors,
\item standardized parameter estimates, and
\item standardized standard errors.
}

The standardized parameters are obtained by updating the output
with the options std.lv = TRUE and std.ov = TRUE.  If these
options were used when originally creating output, setting
standardized = TRUE will yield two identical sets of two columns.
}
\examples{
require(lavaan)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
output1 <- cfa(HS.model, data = HolzingerSwineford1939, std.lv = TRUE)
cfaTable(output1, fit = "rmsea",
standardized = TRUE, params = c("loadings", "latentvariances"),
type = "latex")

\donttest{
## Example with file output
## cfaTable(output1, file = "exampleTable", fit = "rmsea",
## standardized = TRUE, params = c("loadings", "latentvariances"),
## type = "latex")
}

model <- "factor =~ .7*y1 + .7*y2 + .7*y3 + .7*y4
y1 | -1*t1 + 1*t2
y2 | -.5*t1 + 1*t2
y3 | -.2*t1 + 1*t2
y4 | -1*t1 + 1*t2
"
dat <- simulateData(model, sample.nobs = 300)
testmodel <- "ExampleFactor =~ y1 + y2 + y3 + y4"
output <- cfa(testmodel, data = dat, ordered = colnames(dat),
    std.lv = FALSE)
cfaTable(output, 
    params = c("loadings", "thresholds", "residuals"),
    fit = c("tli", "chi-square"),
    names_fit = c("TLI", "chi-square"), type = "latex")

\donttest{
## Example with file output
## cfaTable(output, file = "catTable",
##    params = c("loadings", "thresholds", "residuals"),
##    fit = c("tli", "chi-square"),
##    names_fit = c("TLI", "chi-square"), type = "latex")
}
}
\author{
Ben Kite <bakite@ku.edu>
}

